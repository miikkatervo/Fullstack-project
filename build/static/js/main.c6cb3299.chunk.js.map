{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"6MAaeA,EAXF,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACbP,EAAKQ,QACNJ,EAAAC,EAAAC,cAAA,UAAQG,QAASR,GAAmBC,qBCgB7BQ,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNb,WAAW,GAEb,OAAOQ,EAAQM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,MAaxCJ,EAVA,SAAAW,GAEb,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BT,EALA,SAACK,EAAIM,GAElB,OADgBT,IAAMW,IAAN,GAAAH,OAnBF,aAmBE,KAAAA,OAAwBL,GAAMM,GAC/BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCP5BK,EAZM,SAAAzB,GAAiB,IAAd0B,EAAc1B,EAAd0B,QACpB,OAAgB,OAAZA,EACK,KAIPrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZkB,ICJHC,EAAS,WAOb,OACEtB,EAAAC,EAAAC,cAAA,OAAKqB,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qFAmGSyB,EA9FH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,IAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcV,oBAAS,GAHvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGAE,EAHAF,EAAA,GAAAG,EAIwBd,mBAAS,IAJjCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAITE,EAJSD,EAAA,GAIKE,EAJLF,EAAA,GAOhBG,oBAAU,WACRC,IAEGnC,KAAK,SAAAoC,GACJf,EAASe,MAEZ,IAGH,IAAMC,EAAcT,EAChBR,EACAA,EAAMkB,OAAO,SAAAvD,GAAI,OAAuB,IAAnBA,EAAKG,YAkD9B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAACkD,EAAD,CAAc/B,QAASwB,IAEvB7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMqC,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlCzC,EAAAC,EAAAC,cAAA,UAvCegD,EAAYG,IAAI,SAAAzD,GAAI,OACrCI,EAAAC,EAAAC,cAACoD,EAAD,CACEC,IAAK3D,EAAKe,GACVf,KAAMA,EACNC,iBAAkB,kBAxBO,SAAAc,GACzB,IAAMf,EAAOqC,EAAMuB,KAAK,SAAAC,GAAC,OAAIA,EAAE9C,KAAOA,IAChC+C,EAAW3B,OAAA4B,EAAA,EAAA5B,CAAA,GAAQnC,EAAR,CAAcG,WAAYH,EAAKG,YAEhDiD,EACUrC,EAAI+C,GACX7C,KAAK,SAAA+C,GACJ1B,EAASD,EAAMoB,IAAI,SAAAzD,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOgE,OAEpDC,MAAM,SAAAC,GACLhB,EAAe,SAAA9B,OACJpB,EAAKQ,QADD,sCAGf2D,WAAW,WACTjB,EAAgB,OACf,KACHZ,EAASD,EAAMkB,OAAO,SAAAM,GAAC,OAAIA,EAAE9C,KAAOA,OAQhBqD,CAAmBpE,EAAKe,UAsChDX,EAAAC,EAAAC,cAAA,QAAM+D,SA9BM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhE,QAASiC,EACTzB,MAAM,IAAIyD,MAAOC,cACjBvE,UAAWwE,KAAKC,SAAW,GAC3B7D,GAAIsB,EAAMwC,OAAS,GAErBzB,EACQoB,GACPvD,KAAK,SAAA+C,GACJ1B,EAASD,EAAMjB,OAAO4C,IACtBtB,EAAW,QAmBTtC,EAAAC,EAAAC,cAAA,SACEwE,MAAQrC,EACRsC,SArCiB,SAACT,GACxB5B,EAAW4B,EAAMU,OAAOF,UAsCpB1E,EAAAC,EAAAC,cAAA,UAAQ2E,KAAK,UAAb,SAEF7E,EAAAC,EAAAC,cAAC4E,EAAD,cCvGNC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c6cb3299.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: 'This note is not saved to server',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true,\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n    const toggleImportanceOf = id => {\n      const note = notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n      noteService\n        .update(id, changedNote)\n        .then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNotes(notes.filter(n => n.id !== id))\n        })\n    }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value ={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}